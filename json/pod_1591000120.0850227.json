"[{'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 8, 27, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'helm-install-traefik-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'controller-uid': '6b227a78-4ead-4090-8332-3db11ce4ff43',\n                         'helmcharts.helm.cattle.io/chart': 'traefik',\n                         'job-name': 'helm-install-traefik'},\n              'name': 'helm-install-traefik-lvbrk',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'batch/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'Job',\n                                    'name': 'helm-install-traefik',\n                                    'uid': '6b227a78-4ead-4090-8332-3db11ce4ff43'}],\n              'resource_version': '510',\n              'self_link': '/api/v1/namespaces/kube-system/pods/helm-install-traefik-lvbrk',\n              'uid': 'f24a3e47-10b1-45f0-9c40-3eba386f813e'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': None,\n          'automount_service_account_token': None,\n          'containers': [{'args': ['install'],\n                          'command': None,\n                          'env': [{'name': 'NAME',\n                                   'value': 'traefik',\n                                   'value_from': None},\n                                  {'name': 'VERSION',\n                                   'value': None,\n                                   'value_from': None},\n                                  {'name': 'REPO',\n                                   'value': None,\n                                   'value_from': None},\n                                  {'name': 'VALUES_HASH',\n                                   'value': 'cfaa420eb38db08e829c9f1359fe1688d72fad5b816f2c99a4f23b58e94680fb',\n                                   'value_from': None},\n                                  {'name': 'HELM_DRIVER',\n                                   'value': 'secret',\n                                   'value_from': None},\n                                  {'name': 'CHART_NAMESPACE',\n                                   'value': 'kube-system',\n                                   'value_from': None},\n                                  {'name': 'CHART',\n                                   'value': 'https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz',\n                                   'value_from': None},\n                                  {'name': 'HELM_VERSION',\n                                   'value': None,\n                                   'value_from': None},\n                                  {'name': 'NO_PROXY',\n                                   'value': ',10.42.0.0/16,10.43.0.0/16',\n                                   'value_from': None}],\n                          'env_from': None,\n                          'image': 'rancher/klipper-helm:v0.2.5',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'helm',\n                          'ports': None,\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': None,\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/config',\n                                             'mount_propagation': None,\n                                             'name': 'values',\n                                             'read_only': None,\n                                             'sub_path': None},\n                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'helm-traefik-token-kv9hr',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'master',\n          'node_selector': None,\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'OnFailure',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'helm-traefik',\n          'service_account_name': 'helm-traefik',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': {'default_mode': 420,\n                                      'items': None,\n                                      'name': 'chart-values-traefik',\n                                      'optional': None},\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'values',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': None,\n                       'storageos': None,\n                       'vsphere_volume': None},\n                      {'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'helm-traefik-token-kv9hr',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'helm-traefik-token-kv9hr'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 30, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': 'PodCompleted',\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 2, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': 'PodCompleted',\n                            'status': 'False',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 2, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': 'PodCompleted',\n                            'status': 'False',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 30, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://24d02e7886e5d3418e4b6dcd4d315ea6501990b9d69be3c17e00cfa5c99ff17f',\n                                    'image': 'rancher/klipper-helm:v0.2.5',\n                                    'image_id': 'docker-pullable://rancher/klipper-helm@sha256:b694f931ffb70c4e0b6aedf69171936cad98e79a5df49372f0e553d7d610062d',\n                                    'last_state': {'running': None,\n                                                   'terminated': None,\n                                                   'waiting': None},\n                                    'name': 'helm',\n                                    'ready': False,\n                                    'restart_count': 0,\n                                    'state': {'running': None,\n                                              'terminated': {'container_id': 'docker://24d02e7886e5d3418e4b6dcd4d315ea6501990b9d69be3c17e00cfa5c99ff17f',\n                                                             'exit_code': 0,\n                                                             'finished_at': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n                                                             'message': None,\n                                                             'reason': 'Completed',\n                                                             'signal': None,\n                                                             'started_at': datetime.datetime(2020, 5, 22, 8, 8, 59, tzinfo=tzutc())},\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.134',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Succeeded',\n            'pod_ip': '10.42.0.5',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 8, 30, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 8, 27, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'metrics-server-7566d596c8-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'k8s-app': 'metrics-server',\n                         'pod-template-hash': '7566d596c8'},\n              'name': 'metrics-server-7566d596c8-b4xgm',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'apps/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'ReplicaSet',\n                                    'name': 'metrics-server-7566d596c8',\n                                    'uid': '874f8e3f-7363-40b5-926c-945a57555999'}],\n              'resource_version': '21245',\n              'self_link': '/api/v1/namespaces/kube-system/pods/metrics-server-7566d596c8-b4xgm',\n              'uid': '43c8de39-8d0a-46e5-b446-65fb7bbc9478'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': None,\n          'automount_service_account_token': None,\n          'containers': [{'args': None,\n                          'command': None,\n                          'env': None,\n                          'env_from': None,\n                          'image': 'rancher/metrics-server:v0.3.6',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'metrics-server',\n                          'ports': None,\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': None,\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/tmp',\n                                             'mount_propagation': None,\n                                             'name': 'tmp-dir',\n                                             'read_only': None,\n                                             'sub_path': None},\n                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'metrics-server-token-h46g5',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'master',\n          'node_selector': None,\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'metrics-server',\n          'service_account_name': 'metrics-server',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': None,\n                           'key': 'CriticalAddonsOnly',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node-role.kubernetes.io/master',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': {'medium': None, 'size_limit': None},\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'tmp-dir',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': None,\n                       'storageos': None,\n                       'vsphere_volume': None},\n                      {'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'metrics-server-token-h46g5',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'metrics-server-token-h46g5'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 41, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 41, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://2cd35f464e79fd532259bed875f90cb3fad8bc8b79bd1d3dae61b82d90eda457',\n                                    'image': 'rancher/metrics-server:v0.3.6',\n                                    'image_id': 'docker-pullable://rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://74485109c482abaf57803c4d79d0704f71762e7c6ba385c8106d033534b34d98',\n                                                                  'exit_code': 2,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 29, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 23, 8, 36, 35, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'metrics-server',\n                                    'ready': True,\n                                    'restart_count': 3,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 36, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.134',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.0.18',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 8, 27, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'local-path-provisioner-6d59f47c7-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'app': 'local-path-provisioner',\n                         'pod-template-hash': '6d59f47c7'},\n              'name': 'local-path-provisioner-6d59f47c7-4dk55',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'apps/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'ReplicaSet',\n                                    'name': 'local-path-provisioner-6d59f47c7',\n                                    'uid': 'e71dc07c-e42d-4e4e-904d-9bf56bb1cae2'}],\n              'resource_version': '21259',\n              'self_link': '/api/v1/namespaces/kube-system/pods/local-path-provisioner-6d59f47c7-4dk55',\n              'uid': '2f10170b-8f57-4063-a292-82f0f258ef7c'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': None,\n          'automount_service_account_token': None,\n          'containers': [{'args': None,\n                          'command': ['local-path-provisioner',\n                                      'start',\n                                      '--config',\n                                      '/etc/config/config.json'],\n                          'env': [{'name': 'POD_NAMESPACE',\n                                   'value': None,\n                                   'value_from': {'config_map_key_ref': None,\n                                                  'field_ref': {'api_version': 'v1',\n                                                                'field_path': 'metadata.namespace'},\n                                                  'resource_field_ref': None,\n                                                  'secret_key_ref': None}}],\n                          'env_from': None,\n                          'image': 'rancher/local-path-provisioner:v0.0.11',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'local-path-provisioner',\n                          'ports': None,\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': None,\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/etc/config/',\n                                             'mount_propagation': None,\n                                             'name': 'config-volume',\n                                             'read_only': None,\n                                             'sub_path': None},\n                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'local-path-provisioner-service-account-token-8gvhx',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'master',\n          'node_selector': None,\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'local-path-provisioner-service-account',\n          'service_account_name': 'local-path-provisioner-service-account',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': None,\n                           'key': 'CriticalAddonsOnly',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node-role.kubernetes.io/master',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': {'default_mode': 420,\n                                      'items': None,\n                                      'name': 'local-path-config',\n                                      'optional': None},\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'config-volume',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': None,\n                       'storageos': None,\n                       'vsphere_volume': None},\n                      {'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'local-path-provisioner-service-account-token-8gvhx',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'local-path-provisioner-service-account-token-8gvhx'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 41, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 41, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://7475450509fae14953a87a08586e476d6b4836533e0bc9c78138294786a896ed',\n                                    'image': 'rancher/local-path-provisioner:v0.0.11',\n                                    'image_id': 'docker-pullable://rancher/local-path-provisioner@sha256:0d60b97b101e432606035ab955c623604493e8956484af1cfa207753329bdf81',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://a848f4b9bdf8ed0fe73f3992b8d2170a88a7b2837a95ffa6ffb3a86c2e544f13',\n                                                                  'exit_code': 1,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 55, 44, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 26, 8, 55, 43, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'local-path-provisioner',\n                                    'ready': True,\n                                    'restart_count': 13,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 36, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.134',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.0.19',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'svclb-traefik-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'app': 'svclb-traefik',\n                         'controller-revision-hash': '6cc75855ff',\n                         'pod-template-generation': '1',\n                         'svccontroller.k3s.cattle.io/svcname': 'traefik'},\n              'name': 'svclb-traefik-ksgz2',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'apps/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'DaemonSet',\n                                    'name': 'svclb-traefik',\n                                    'uid': 'bea89636-492f-47ff-b8a6-d6bf1304790f'}],\n              'resource_version': '21265',\n              'self_link': '/api/v1/namespaces/kube-system/pods/svclb-traefik-ksgz2',\n              'uid': '250c8ed3-d909-406d-a538-3c47b165303e'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,\n                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,\n                                                                                                                          'match_fields': [{'key': 'metadata.name',\n                                                                                                                                            'operator': 'In',\n                                                                                                                                            'values': ['master']}]}]}},\n                       'pod_affinity': None,\n                       'pod_anti_affinity': None},\n          'automount_service_account_token': None,\n          'containers': [{'args': None,\n                          'command': None,\n                          'env': [{'name': 'SRC_PORT',\n                                   'value': '80',\n                                   'value_from': None},\n                                  {'name': 'DEST_PROTO',\n                                   'value': 'TCP',\n                                   'value_from': None},\n                                  {'name': 'DEST_PORT',\n                                   'value': '80',\n                                   'value_from': None},\n                                  {'name': 'DEST_IP',\n                                   'value': '10.43.84.218',\n                                   'value_from': None}],\n                          'env_from': None,\n                          'image': 'rancher/klipper-lb:v0.1.2',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'lb-port-80',\n                          'ports': [{'container_port': 80,\n                                     'host_ip': None,\n                                     'host_port': 80,\n                                     'name': 'lb-port-80',\n                                     'protocol': 'TCP'}],\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': {'allow_privilege_escalation': None,\n                                               'capabilities': {'add': ['NET_ADMIN'],\n                                                                'drop': None},\n                                               'privileged': None,\n                                               'proc_mount': None,\n                                               'read_only_root_filesystem': None,\n                                               'run_as_group': None,\n                                               'run_as_non_root': None,\n                                               'run_as_user': None,\n                                               'se_linux_options': None},\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'default-token-4lffj',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None},\n                         {'args': None,\n                          'command': None,\n                          'env': [{'name': 'SRC_PORT',\n                                   'value': '443',\n                                   'value_from': None},\n                                  {'name': 'DEST_PROTO',\n                                   'value': 'TCP',\n                                   'value_from': None},\n                                  {'name': 'DEST_PORT',\n                                   'value': '443',\n                                   'value_from': None},\n                                  {'name': 'DEST_IP',\n                                   'value': '10.43.84.218',\n                                   'value_from': None}],\n                          'env_from': None,\n                          'image': 'rancher/klipper-lb:v0.1.2',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'lb-port-443',\n                          'ports': [{'container_port': 443,\n                                     'host_ip': None,\n                                     'host_port': 443,\n                                     'name': 'lb-port-443',\n                                     'protocol': 'TCP'}],\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': {'allow_privilege_escalation': None,\n                                               'capabilities': {'add': ['NET_ADMIN'],\n                                                                'drop': None},\n                                               'privileged': None,\n                                               'proc_mount': None,\n                                               'read_only_root_filesystem': None,\n                                               'run_as_group': None,\n                                               'run_as_non_root': None,\n                                               'run_as_user': None,\n                                               'se_linux_options': None},\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'default-token-4lffj',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'master',\n          'node_selector': None,\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'default',\n          'service_account_name': 'default',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': 'NoSchedule',\n                           'key': 'noderole.kubernetes.io/master',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': None,\n                           'key': 'CriticalAddonsOnly',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/disk-pressure',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/memory-pressure',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/pid-pressure',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/unschedulable',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'default-token-4lffj',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'default-token-4lffj'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 42, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 42, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://1e3084fd0b743d41342ab945cfd316ffad3c1f1f34d4ddfd821e08b70ae641ae',\n                                    'image': 'rancher/klipper-lb:v0.1.2',\n                                    'image_id': 'docker-pullable://rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://9dae0237ebc9abf396c20654603842f1ac865d912b2f541dff62239dc1d5afb8',\n                                                                  'exit_code': 1,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 29, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 23, 8, 36, 36, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'lb-port-443',\n                                    'ready': True,\n                                    'restart_count': 3,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 42, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}},\n                                   {'container_id': 'docker://076daf509392a7c240447f5fe3a9080b6eb9a86add72cbd83ff17f50ce010f9f',\n                                    'image': 'rancher/klipper-lb:v0.1.2',\n                                    'image_id': 'docker-pullable://rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://97f1b7183b30a53487cdcf7e3521b31f957decf137da252c082bd5dce414e376',\n                                                                  'exit_code': 1,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 29, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 23, 8, 36, 35, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'lb-port-80',\n                                    'ready': True,\n                                    'restart_count': 3,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 40, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.134',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.0.20',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 8, 27, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'coredns-8655855d6-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'k8s-app': 'kube-dns',\n                         'pod-template-hash': '8655855d6'},\n              'name': 'coredns-8655855d6-kd28d',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'apps/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'ReplicaSet',\n                                    'name': 'coredns-8655855d6',\n                                    'uid': '4eb443ab-b8ec-4e60-a3c4-f8ce45737df9'}],\n              'resource_version': '21275',\n              'self_link': '/api/v1/namespaces/kube-system/pods/coredns-8655855d6-kd28d',\n              'uid': '0e2c891d-09f2-49f7-a49a-0b4f38b65731'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': None,\n          'automount_service_account_token': None,\n          'containers': [{'args': ['-conf', '/etc/coredns/Corefile'],\n                          'command': None,\n                          'env': None,\n                          'env_from': None,\n                          'image': 'rancher/coredns-coredns:1.6.3',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': {'_exec': None,\n                                             'failure_threshold': 5,\n                                             'http_get': {'host': None,\n                                                          'http_headers': None,\n                                                          'path': '/health',\n                                                          'port': 8080,\n                                                          'scheme': 'HTTP'},\n                                             'initial_delay_seconds': 60,\n                                             'period_seconds': 10,\n                                             'success_threshold': 1,\n                                             'tcp_socket': None,\n                                             'timeout_seconds': 5},\n                          'name': 'coredns',\n                          'ports': [{'container_port': 53,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'dns',\n                                     'protocol': 'UDP'},\n                                    {'container_port': 53,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'dns-tcp',\n                                     'protocol': 'TCP'},\n                                    {'container_port': 9153,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'metrics',\n                                     'protocol': 'TCP'}],\n                          'readiness_probe': {'_exec': None,\n                                              'failure_threshold': 5,\n                                              'http_get': {'host': None,\n                                                           'http_headers': None,\n                                                           'path': '/ready',\n                                                           'port': 8181,\n                                                           'scheme': 'HTTP'},\n                                              'initial_delay_seconds': 10,\n                                              'period_seconds': 10,\n                                              'success_threshold': 1,\n                                              'tcp_socket': None,\n                                              'timeout_seconds': 5},\n                          'resources': {'limits': {'memory': '170Mi'},\n                                        'requests': {'cpu': '100m',\n                                                     'memory': '70Mi'}},\n                          'security_context': {'allow_privilege_escalation': False,\n                                               'capabilities': {'add': ['NET_BIND_SERVICE'],\n                                                                'drop': ['all']},\n                                               'privileged': None,\n                                               'proc_mount': None,\n                                               'read_only_root_filesystem': True,\n                                               'run_as_group': None,\n                                               'run_as_non_root': None,\n                                               'run_as_user': None,\n                                               'se_linux_options': None},\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/etc/coredns',\n                                             'mount_propagation': None,\n                                             'name': 'config-volume',\n                                             'read_only': True,\n                                             'sub_path': None},\n                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'coredns-token-vm476',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'Default',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'master',\n          'node_selector': {'beta.kubernetes.io/os': 'linux'},\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'coredns',\n          'service_account_name': 'coredns',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': None,\n                           'key': 'CriticalAddonsOnly',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node-role.kubernetes.io/master',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': {'default_mode': 420,\n                                      'items': [{'key': 'Corefile',\n                                                 'mode': None,\n                                                 'path': 'Corefile'},\n                                                {'key': 'NodeHosts',\n                                                 'mode': None,\n                                                 'path': 'NodeHosts'}],\n                                      'name': 'coredns',\n                                      'optional': None},\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'config-volume',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': None,\n                       'storageos': None,\n                       'vsphere_volume': None},\n                      {'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'coredns-token-vm476',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'coredns-token-vm476'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 58, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 58, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://a61ae191ac6024e435fd3d72398480dd2852ccf68ea9206eef0fe4bfdbfada16',\n                                    'image': 'rancher/coredns-coredns:1.6.3',\n                                    'image_id': 'docker-pullable://rancher/coredns-coredns@sha256:cfa7236dab4e3860881fdf755880ff8361e42f6cba2e3775ae48e2d46d22f7ba',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://bc6dbbd7b77c7382e608bb7fe2f6cb47553a67370abe21256de8f126ad005f10',\n                                                                  'exit_code': 0,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 29, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Completed',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 23, 8, 36, 34, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'coredns',\n                                    'ready': True,\n                                    'restart_count': 3,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 39, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.134',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.0.22',\n            'qos_class': 'Burstable',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 8, 29, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': {'checksum/config': '160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de'},\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'traefik-758cd5fc85-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'app': 'traefik',\n                         'chart': 'traefik-1.81.0',\n                         'heritage': 'Helm',\n                         'pod-template-hash': '758cd5fc85',\n                         'release': 'traefik'},\n              'name': 'traefik-758cd5fc85-hd7pq',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'apps/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'ReplicaSet',\n                                    'name': 'traefik-758cd5fc85',\n                                    'uid': 'dcf88e81-6771-41db-8dc6-c7cec01b697c'}],\n              'resource_version': '21279',\n              'self_link': '/api/v1/namespaces/kube-system/pods/traefik-758cd5fc85-hd7pq',\n              'uid': '98c9dfd0-833c-4040-845d-50485a6260d7'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': None,\n          'automount_service_account_token': None,\n          'containers': [{'args': ['--configfile=/config/traefik.toml'],\n                          'command': None,\n                          'env': None,\n                          'env_from': None,\n                          'image': 'rancher/library-traefik:1.7.19',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': {'_exec': None,\n                                             'failure_threshold': 3,\n                                             'http_get': {'host': None,\n                                                          'http_headers': None,\n                                                          'path': '/ping',\n                                                          'port': 'http',\n                                                          'scheme': 'HTTP'},\n                                             'initial_delay_seconds': 10,\n                                             'period_seconds': 10,\n                                             'success_threshold': 1,\n                                             'tcp_socket': None,\n                                             'timeout_seconds': 2},\n                          'name': 'traefik',\n                          'ports': [{'container_port': 80,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'http',\n                                     'protocol': 'TCP'},\n                                    {'container_port': 8880,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'httpn',\n                                     'protocol': 'TCP'},\n                                    {'container_port': 443,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'https',\n                                     'protocol': 'TCP'},\n                                    {'container_port': 8080,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'dash',\n                                     'protocol': 'TCP'},\n                                    {'container_port': 9100,\n                                     'host_ip': None,\n                                     'host_port': None,\n                                     'name': 'metrics',\n                                     'protocol': 'TCP'}],\n                          'readiness_probe': {'_exec': None,\n                                              'failure_threshold': 1,\n                                              'http_get': {'host': None,\n                                                           'http_headers': None,\n                                                           'path': '/ping',\n                                                           'port': 'http',\n                                                           'scheme': 'HTTP'},\n                                              'initial_delay_seconds': 10,\n                                              'period_seconds': 10,\n                                              'success_threshold': 1,\n                                              'tcp_socket': None,\n                                              'timeout_seconds': 2},\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': None,\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/config',\n                                             'mount_propagation': None,\n                                             'name': 'config',\n                                             'read_only': None,\n                                             'sub_path': None},\n                                            {'mount_path': '/ssl',\n                                             'mount_propagation': None,\n                                             'name': 'ssl',\n                                             'read_only': None,\n                                             'sub_path': None},\n                                            {'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'traefik-token-sx9fj',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'master',\n          'node_selector': None,\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'traefik',\n          'service_account_name': 'traefik',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 60,\n          'tolerations': [{'effect': None,\n                           'key': 'CriticalAddonsOnly',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node-role.kubernetes.io/master',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': {'default_mode': 420,\n                                      'items': None,\n                                      'name': 'traefik',\n                                      'optional': None},\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'config',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': None,\n                       'storageos': None,\n                       'vsphere_volume': None},\n                      {'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'ssl',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'traefik-default-cert'},\n                       'storageos': None,\n                       'vsphere_volume': None},\n                      {'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'traefik-token-sx9fj',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'traefik-token-sx9fj'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 58, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 58, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://3b284dc7bdc3e9f89f64ba1297c13467ed78554c717464fac225a342b135c1c3',\n                                    'image': 'rancher/library-traefik:1.7.19',\n                                    'image_id': 'docker-pullable://rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://193240c90a37ecbc2b8fe87ba53e0c927bc16ee8b253051862d6ea8d30200578',\n                                                                  'exit_code': 0,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 29, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Completed',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 23, 8, 36, 32, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'traefik',\n                                    'ready': True,\n                                    'restart_count': 3,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 39, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.134',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.0.21',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 9, 1, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 23, 8, 38, 46, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': None,\n              'generation': None,\n              'initializers': None,\n              'labels': None,\n              'name': 'ping-pod1',\n              'namespace': 'default',\n              'owner_references': None,\n              'resource_version': '160886',\n              'self_link': '/api/v1/namespaces/default/pods/ping-pod1',\n              'uid': '36faa901-8804-445d-8c0e-2c5b3da358bf'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': None,\n          'automount_service_account_token': None,\n          'containers': [{'args': None,\n                          'command': ['/sbin/init'],\n                          'env': None,\n                          'env_from': None,\n                          'image': 'registry.cn-hangzhou.aliyuncs.com/k3s_ssh/centos_tools:latest',\n                          'image_pull_policy': 'Always',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'ping-pod1',\n                          'ports': None,\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': None,\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'default-token-8gjj5',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'edge-1',\n          'node_selector': {'kubernetes.io/hostname': 'edge-1'},\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'default',\n          'service_account_name': 'default',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': 300,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'default-token-8gjj5',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'default-token-8gjj5'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 23, 8, 38, 46, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 6, 1, 8, 27, 14, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'False',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 33, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 23, 8, 38, 46, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://467777f985884dc6da9de3b7e778e1e800cc1b2f5f3718851c5a13a99c1d1465',\n                                    'image': 'centos/tools:latest',\n                                    'image_id': 'docker-pullable://centos/tools@sha256:81159542603c2349a276a30cc147045bc642bd84a62c1b427a8d243ef1893e2f',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://4c4461442eb2c25649f20e0a0da70e30444e30fa923ec0707284cea9b585b899',\n                                                                  'exit_code': 137,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 35, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 25, 7, 10, 57, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'ping-pod1',\n                                    'ready': True,\n                                    'restart_count': 2,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 33, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.135',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.1.14',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 23, 8, 38, 46, tzinfo=tzutc())}}, {'api_version': None,\n 'kind': None,\n 'metadata': {'annotations': None,\n              'cluster_name': None,\n              'creation_timestamp': datetime.datetime(2020, 5, 22, 8, 9, 24, tzinfo=tzutc()),\n              'deletion_grace_period_seconds': None,\n              'deletion_timestamp': None,\n              'finalizers': None,\n              'generate_name': 'svclb-traefik-',\n              'generation': None,\n              'initializers': None,\n              'labels': {'app': 'svclb-traefik',\n                         'controller-revision-hash': '6cc75855ff',\n                         'pod-template-generation': '1',\n                         'svccontroller.k3s.cattle.io/svcname': 'traefik'},\n              'name': 'svclb-traefik-zb4qr',\n              'namespace': 'kube-system',\n              'owner_references': [{'api_version': 'apps/v1',\n                                    'block_owner_deletion': True,\n                                    'controller': True,\n                                    'kind': 'DaemonSet',\n                                    'name': 'svclb-traefik',\n                                    'uid': 'bea89636-492f-47ff-b8a6-d6bf1304790f'}],\n              'resource_version': '160889',\n              'self_link': '/api/v1/namespaces/kube-system/pods/svclb-traefik-zb4qr',\n              'uid': '9a4ccd82-c822-458e-94a4-32007474e10d'},\n 'spec': {'active_deadline_seconds': None,\n          'affinity': {'node_affinity': {'preferred_during_scheduling_ignored_during_execution': None,\n                                         'required_during_scheduling_ignored_during_execution': {'node_selector_terms': [{'match_expressions': None,\n                                                                                                                          'match_fields': [{'key': 'metadata.name',\n                                                                                                                                            'operator': 'In',\n                                                                                                                                            'values': ['edge-1']}]}]}},\n                       'pod_affinity': None,\n                       'pod_anti_affinity': None},\n          'automount_service_account_token': None,\n          'containers': [{'args': None,\n                          'command': None,\n                          'env': [{'name': 'SRC_PORT',\n                                   'value': '80',\n                                   'value_from': None},\n                                  {'name': 'DEST_PROTO',\n                                   'value': 'TCP',\n                                   'value_from': None},\n                                  {'name': 'DEST_PORT',\n                                   'value': '80',\n                                   'value_from': None},\n                                  {'name': 'DEST_IP',\n                                   'value': '10.43.84.218',\n                                   'value_from': None}],\n                          'env_from': None,\n                          'image': 'rancher/klipper-lb:v0.1.2',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'lb-port-80',\n                          'ports': [{'container_port': 80,\n                                     'host_ip': None,\n                                     'host_port': 80,\n                                     'name': 'lb-port-80',\n                                     'protocol': 'TCP'}],\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': {'allow_privilege_escalation': None,\n                                               'capabilities': {'add': ['NET_ADMIN'],\n                                                                'drop': None},\n                                               'privileged': None,\n                                               'proc_mount': None,\n                                               'read_only_root_filesystem': None,\n                                               'run_as_group': None,\n                                               'run_as_non_root': None,\n                                               'run_as_user': None,\n                                               'se_linux_options': None},\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'default-token-4lffj',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None},\n                         {'args': None,\n                          'command': None,\n                          'env': [{'name': 'SRC_PORT',\n                                   'value': '443',\n                                   'value_from': None},\n                                  {'name': 'DEST_PROTO',\n                                   'value': 'TCP',\n                                   'value_from': None},\n                                  {'name': 'DEST_PORT',\n                                   'value': '443',\n                                   'value_from': None},\n                                  {'name': 'DEST_IP',\n                                   'value': '10.43.84.218',\n                                   'value_from': None}],\n                          'env_from': None,\n                          'image': 'rancher/klipper-lb:v0.1.2',\n                          'image_pull_policy': 'IfNotPresent',\n                          'lifecycle': None,\n                          'liveness_probe': None,\n                          'name': 'lb-port-443',\n                          'ports': [{'container_port': 443,\n                                     'host_ip': None,\n                                     'host_port': 443,\n                                     'name': 'lb-port-443',\n                                     'protocol': 'TCP'}],\n                          'readiness_probe': None,\n                          'resources': {'limits': None, 'requests': None},\n                          'security_context': {'allow_privilege_escalation': None,\n                                               'capabilities': {'add': ['NET_ADMIN'],\n                                                                'drop': None},\n                                               'privileged': None,\n                                               'proc_mount': None,\n                                               'read_only_root_filesystem': None,\n                                               'run_as_group': None,\n                                               'run_as_non_root': None,\n                                               'run_as_user': None,\n                                               'se_linux_options': None},\n                          'stdin': None,\n                          'stdin_once': None,\n                          'termination_message_path': '/dev/termination-log',\n                          'termination_message_policy': 'File',\n                          'tty': None,\n                          'volume_devices': None,\n                          'volume_mounts': [{'mount_path': '/var/run/secrets/kubernetes.io/serviceaccount',\n                                             'mount_propagation': None,\n                                             'name': 'default-token-4lffj',\n                                             'read_only': True,\n                                             'sub_path': None}],\n                          'working_dir': None}],\n          'dns_config': None,\n          'dns_policy': 'ClusterFirst',\n          'enable_service_links': True,\n          'host_aliases': None,\n          'host_ipc': None,\n          'host_network': None,\n          'host_pid': None,\n          'hostname': None,\n          'image_pull_secrets': None,\n          'init_containers': None,\n          'node_name': 'edge-1',\n          'node_selector': None,\n          'priority': 0,\n          'priority_class_name': None,\n          'readiness_gates': None,\n          'restart_policy': 'Always',\n          'runtime_class_name': None,\n          'scheduler_name': 'default-scheduler',\n          'security_context': {'fs_group': None,\n                               'run_as_group': None,\n                               'run_as_non_root': None,\n                               'run_as_user': None,\n                               'se_linux_options': None,\n                               'supplemental_groups': None,\n                               'sysctls': None},\n          'service_account': 'default',\n          'service_account_name': 'default',\n          'share_process_namespace': None,\n          'subdomain': None,\n          'termination_grace_period_seconds': 30,\n          'tolerations': [{'effect': 'NoSchedule',\n                           'key': 'noderole.kubernetes.io/master',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': None,\n                           'key': 'CriticalAddonsOnly',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/not-ready',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoExecute',\n                           'key': 'node.kubernetes.io/unreachable',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/disk-pressure',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/memory-pressure',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/pid-pressure',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None},\n                          {'effect': 'NoSchedule',\n                           'key': 'node.kubernetes.io/unschedulable',\n                           'operator': 'Exists',\n                           'toleration_seconds': None,\n                           'value': None}],\n          'volumes': [{'aws_elastic_block_store': None,\n                       'azure_disk': None,\n                       'azure_file': None,\n                       'cephfs': None,\n                       'cinder': None,\n                       'config_map': None,\n                       'downward_api': None,\n                       'empty_dir': None,\n                       'fc': None,\n                       'flex_volume': None,\n                       'flocker': None,\n                       'gce_persistent_disk': None,\n                       'git_repo': None,\n                       'glusterfs': None,\n                       'host_path': None,\n                       'iscsi': None,\n                       'name': 'default-token-4lffj',\n                       'nfs': None,\n                       'persistent_volume_claim': None,\n                       'photon_persistent_disk': None,\n                       'portworx_volume': None,\n                       'projected': None,\n                       'quobyte': None,\n                       'rbd': None,\n                       'scale_io': None,\n                       'secret': {'default_mode': 420,\n                                  'items': None,\n                                  'optional': None,\n                                  'secret_name': 'default-token-4lffj'},\n                       'storageos': None,\n                       'vsphere_volume': None}]},\n 'status': {'conditions': [{'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 24, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'Initialized'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 6, 1, 8, 27, 14, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'False',\n                            'type': 'Ready'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 26, 8, 57, 32, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'ContainersReady'},\n                           {'last_probe_time': None,\n                            'last_transition_time': datetime.datetime(2020, 5, 22, 8, 9, 24, tzinfo=tzutc()),\n                            'message': None,\n                            'reason': None,\n                            'status': 'True',\n                            'type': 'PodScheduled'}],\n            'container_statuses': [{'container_id': 'docker://19954688ba20405d915e2deaa44e6348f1a90f41c3a008236b81d46a14f0c882',\n                                    'image': 'rancher/klipper-lb:v0.1.2',\n                                    'image_id': 'docker-pullable://rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://3f5a83420d667ad970bce5ea6c3d013764c43832a59f1a69b7e9a52bc2f6856f',\n                                                                  'exit_code': 1,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 25, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 25, 7, 10, 55, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'lb-port-443',\n                                    'ready': True,\n                                    'restart_count': 4,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 32, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}},\n                                   {'container_id': 'docker://c6d92580426b9eb30b64868dc979e2c8b0b25301bf918a6a07622e430d833755',\n                                    'image': 'rancher/klipper-lb:v0.1.2',\n                                    'image_id': 'docker-pullable://rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a',\n                                    'last_state': {'running': None,\n                                                   'terminated': {'container_id': 'docker://a99661a0c15365cfea71e0210706671ed30ab8aa6afe9ac9488322a3bbde3d66',\n                                                                  'exit_code': 1,\n                                                                  'finished_at': datetime.datetime(2020, 5, 26, 8, 56, 25, tzinfo=tzutc()),\n                                                                  'message': None,\n                                                                  'reason': 'Error',\n                                                                  'signal': None,\n                                                                  'started_at': datetime.datetime(2020, 5, 25, 7, 10, 55, tzinfo=tzutc())},\n                                                   'waiting': None},\n                                    'name': 'lb-port-80',\n                                    'ready': True,\n                                    'restart_count': 4,\n                                    'state': {'running': {'started_at': datetime.datetime(2020, 5, 26, 8, 57, 31, tzinfo=tzutc())},\n                                              'terminated': None,\n                                              'waiting': None}}],\n            'host_ip': '192.168.221.135',\n            'init_container_statuses': None,\n            'message': None,\n            'nominated_node_name': None,\n            'phase': 'Running',\n            'pod_ip': '10.42.1.12',\n            'qos_class': 'BestEffort',\n            'reason': None,\n            'start_time': datetime.datetime(2020, 5, 22, 8, 9, 24, tzinfo=tzutc())}}]"